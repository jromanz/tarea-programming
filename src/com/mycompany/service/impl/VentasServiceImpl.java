package com.mycompany.service.impl;

import com.mycompany.clases.DetalleVentas;
import com.mycompany.clases.Ventas;
import com.mycompany.db.DBManager;
import com.mycompany.service.VentasService;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class VentasServiceImpl implements VentasService {

	@Override
	public void addVenta(Ventas ventas) {
		String query = "insert into ventas (dni_vendedor,fecha,subtotal,igv,total,dni_cliente) values (?,?,?,?,?,?)";
		int autoGeneratedKeys = 0;
		if (ventas != null) {
			try (DBManager dbManager = new DBManager();
					PreparedStatement pStmt = dbManager.getConnection().prepareStatement(query, Statement.RETURN_GENERATED_KEYS)) {
				pStmt.setString(1, ventas.getDni_vendedor());
				pStmt.setTimestamp(2, ventas.getFecha());
				pStmt.setDouble(3, ventas.getSubtotal());
				pStmt.setDouble(4, ventas.getIgv());
				pStmt.setDouble(5, ventas.getTotal());
				pStmt.setString(6, ventas.getDni_cliente());
				int rowAffected = pStmt.executeUpdate();

				ResultSet rs = pStmt.getGeneratedKeys();
				if (rs != null && rs.next()) {
					autoGeneratedKeys = rs.getInt(1);
				}
			} catch (SQLException e) {
				while (e != null) {
					System.out.println("SQLState: " + e.getSQLState());
					System.out.println("Error code: " + e.getErrorCode());
					System.out.println("Message: " + e.getMessage());
					Throwable t = e.getCause();
					while (t != null) {
						System.out.println("Cause: " + t);
						t = t.getCause();
					}
					e = e.getNextException();
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		} else {
			System.out.println("Object ventas null (create)...");
		}
	}

	public void addVenta(Ventas ventas, ArrayList<DetalleVentas> detalleVentas) {
		String query = "insert into ventas (dni_vendedor,fecha,subtotal,igv,total,dni_cliente) values (?,?,?,?,?,?)";
		int autoGeneratedKeys = 0;
		boolean isInserted = false;
		if (ventas != null && detalleVentas != null) {
			try (DBManager dbManager = new DBManager();
					PreparedStatement pStmt = dbManager.getConnection().prepareStatement(query, Statement.RETURN_GENERATED_KEYS)) {

				pStmt.setString(1, ventas.getDni_vendedor());
				pStmt.setTimestamp(2, ventas.getFecha());
				pStmt.setDouble(3, ventas.getSubtotal());
				pStmt.setDouble(4, ventas.getIgv());
				pStmt.setDouble(5, ventas.getTotal());
				pStmt.setString(6, ventas.getDni_cliente());
				int rowAffected = pStmt.executeUpdate();
				isInserted = rowAffected == 1 ? true : false;
				ResultSet rs = pStmt.getGeneratedKeys();
				if (rs != null && rs.next()) {
					autoGeneratedKeys = rs.getInt(1);
				}
				rs.close();
				if (isInserted) {
					for (DetalleVentas detalleVenta : detalleVentas) {
						detalleVenta.setId_ventas(autoGeneratedKeys);
						DetalleVentasServiceImpl detalleVentasService = new DetalleVentasServiceImpl();
						isInserted = detalleVentasService.addDetalleVentas(detalleVenta);
					}
				}
				System.out.println("Filas afectadas: " + rowAffected);
				System.out.println("Generated key: " + autoGeneratedKeys);
			} catch (SQLException e) {
				while (e != null) {
					System.out.println("SQLState: " + e.getSQLState());
					System.out.println("Error code: " + e.getErrorCode());
					System.out.println("Message: " + e.getMessage());
					Throwable t = e.getCause();
					while (t != null) {
						System.out.println("Cause: " + t);
						t = t.getCause();
					}
					e = e.getNextException();
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		} else {
			System.out.println("Object ventas null (create)...");
		}
	}

	@Override
	public void updateVenta(Ventas ventas) {
	}

	@Override
	public void removeVenta(Integer id) {
		String query = "delete from ventas where id=?";
	}

	@Override
	public Ventas findById(Integer id) {
		return null;
	}

	@Override
	public List<Ventas> getAllVentas() {
		return null;
	}

}
